version: "3.8"

services:
  web:
    build: .
    container_name: zango_issue_tracker_web
    depends_on:
      - postgres
      - redis
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PROJECT_NAME=IssueTrackerApplication
      - UPDATE_APPS_ON_STARTUP=True
    volumes:
      - .:/app
    command: >
      sh -c "python manage.py makemigrations && 
             python manage.py migrate && 
             python manage.py runserver 0.0.0.0:8000"

  postgres:
    image: postgres
    container_name: zango_postgres_container
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mypassword
    volumes:
      - zango_postgres_data:/var/lib/postgresql/data

  redis:
    image: redis
    container_name: zango_redis_container
    restart: always
    ports:
      - "6379:6379"

  celery_worker:
    build: .
    container_name: zango_celery_worker
    command: celery -A IssueTrackerApplication worker -l INFO
    volumes:
      - .:/app
    depends_on:
      - redis
      - web
    environment:
      - CELERY_APP=IssueTrackerApplication
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0

  celery_beat:
    build: .
    container_name: zango_celery_beat
    command: celery -A IssueTrackerApplication beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    depends_on:
      - redis
      - web
    environment:
      - CELERY_APP=IssueTrackerApplication
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0

volumes:
  zango_postgres_data:
